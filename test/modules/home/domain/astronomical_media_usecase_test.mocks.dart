// Mocks generated by Mockito 5.4.5 from annotations
// in astromedia/test/modules/home/domain/astronomical_media_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:astromedia/modules/home/domain/enums/media_type.dart' as _i6;
import 'package:astromedia/modules/home/domain/i_repositories/i_astronomical_media_repository.dart'
    as _i3;
import 'package:astromedia/modules/home/domain/models/astronomical_media_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAstronomicalMediaModel_0 extends _i1.SmartFake
    implements _i2.AstronomicalMediaModel {
  _FakeAstronomicalMediaModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IAstronomicalMediaRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAstronomicalMediaRepository extends _i1.Mock
    implements _i3.IAstronomicalMediaRepository {
  @override
  _i4.Future<_i2.AstronomicalMediaModel> getMedia(dynamic day) =>
      (super.noSuchMethod(
            Invocation.method(#getMedia, [day]),
            returnValue: _i4.Future<_i2.AstronomicalMediaModel>.value(
              _FakeAstronomicalMediaModel_0(
                this,
                Invocation.method(#getMedia, [day]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.AstronomicalMediaModel>.value(
                  _FakeAstronomicalMediaModel_0(
                    this,
                    Invocation.method(#getMedia, [day]),
                  ),
                ),
          )
          as _i4.Future<_i2.AstronomicalMediaModel>);
}

/// A class which mocks [AstronomicalMediaModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAstronomicalMediaModel extends _i1.Mock
    implements _i2.AstronomicalMediaModel {
  @override
  String get copyright =>
      (super.noSuchMethod(
            Invocation.getter(#copyright),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#copyright),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#copyright),
            ),
          )
          as String);

  @override
  String get date =>
      (super.noSuchMethod(
            Invocation.getter(#date),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#date)),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#date),
            ),
          )
          as String);

  @override
  String get explanation =>
      (super.noSuchMethod(
            Invocation.getter(#explanation),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#explanation),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#explanation),
            ),
          )
          as String);

  @override
  String get hdUrl =>
      (super.noSuchMethod(
            Invocation.getter(#hdUrl),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#hdUrl),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#hdUrl),
            ),
          )
          as String);

  @override
  _i6.MediaType get mediaType =>
      (super.noSuchMethod(
            Invocation.getter(#mediaType),
            returnValue: _i6.MediaType.image,
            returnValueForMissingStub: _i6.MediaType.image,
          )
          as _i6.MediaType);

  @override
  String get title =>
      (super.noSuchMethod(
            Invocation.getter(#title),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#title),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#title),
            ),
          )
          as String);

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#url)),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#url),
            ),
          )
          as String);

  @override
  List<Object?> get props =>
      (super.noSuchMethod(
            Invocation.getter(#props),
            returnValue: <Object?>[],
            returnValueForMissingStub: <Object?>[],
          )
          as List<Object?>);
}
